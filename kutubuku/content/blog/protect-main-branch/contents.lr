title: Protect Main Branch
---
author: Ricky Lim
---
pub_date: 2025-02-19
---
body:

Strategy to Protect Your Main Branch in Github

## Why ?

Think of your main branch like your house's front door.
You have a doorbell, security camera, and always check who's there before opening.
The same goes for code - you shouldn't push code to main without proper review!


## How can we protect our main branch?

### Pre-commit Hooks - Your Local Guardian

pre-commit is like a guard at the door.
It checks your code before you commit.

Below is an example of how we can use pre-commit:

- Install `pre-commit`

```bash
pip install pre-commit
````

- Create a `.pre-commit-config.yaml` file in your project root

```yaml
repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
    -   id: no-commit-to-branch
        args: ["--branch", "main"]
```

- Install pre-commit hooks

```
pre-commit install
```

Now you can't commit to main branch directly.

### Branch Protection - Your Repository Guardian

While pre-commit guards your local code,
branch protection prevents pushing to main branch directly.

Here's how we can set up branch protection rules:

- Install `gh`

```bash
brew install gh
```

- Login to Github

```bash
gh auth login
```

- Create a branch protection rule `branch-protection-rules.json`

```json
{
    "required_status_checks": {
        "strict": true,
        // List of status checks that must pass before merging
        "contexts": [
            "lint"
        ]
    },
    // Forces admins to follow the same branch protection rules
    "enforce_admins": true,
    "required_pull_request_reviews": {
        "required_approving_review_count": 0
    },
    // Restrict to specific users or teams, work only for github organization
    "restrictions": null,
    "required_linear_history": true,
    "allow_force_pushes": false,
    "allow_deletions": false
}
```

- Apply the branch protection rule

```bash
gh api repos/{owner}/{repo}/branches/{branch}/protection --input <branch-protection-rules.json>

# For Example
gh api --method PUT /repos/ricky-lim/ricky-lim.github.io/branches/main/protection \
  --input branch-protection-rules.json
```

## Key Takeaways

These strategies work in two layers:

1. pre-commit: prevent commits to main branch
2. branch protection rule: prevent pushing to main branch

Together, they provide a robust defense against unreviewed changes to your main branch in your github repository.
