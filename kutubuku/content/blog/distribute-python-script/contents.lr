title: Distribute Python Script
---
author: Ricky Lim
---
pub_date: 2025-01-22
---
body:

This guide demonstates how we can share our Python script with ease
We'll use UV for dependency management and also to run the script.
In addition to that we will also use Docker for seamless distribution.

We'll use a practical example: a weather forecast script, [check_rain](./check_rain) that helps determine if you need an umbrella.

![check_rain_output](./check-rain-output.png)

## Getting started with UV

Installation should be straighforward in all major operating systems.
I encourage you to figure out the solution for your operating system.

```bash
# For Linux and macOS:
wget -qO- https://astral.sh/uv/install.sh | sh
```

## Script Overview

Our [check_rain](./check_rain) script delivers local weather forecasts (Netherlands and Belgium) using Buienradar API. 
It showcases the following features:

- Automatic location detection
- Real-time precipitation forecasts
- Clear umbrella recommendations
- Rich terminal output

In the beginning of the script, we add the following header:

`#!/usr/bin/env -S uv run --script`.

This header is to run the script with `uv`.

After that, the script includes metadata using the following comment:

```python
# /// script
# requires-python = ">=3.12"
# dependencies = [
#   "requests",
#   "rich",
# ]
# ///
```

The metadata is leveraged by UV to **automagically** manage Python versions and dependencies. 
It intelligently handles installation and caching, ensuring fast and reliable script execution every time you run it.

The rest of the script is a normal Python script.

```bash
# Ensure the script is executable
$ chmod +x check_rain
# Run the script
$ check_rain
```

Now the script is ready to be distributed and run.

## System-wide Installation

To make the script runnable from anywhere, we can throw our script to our `$HOME/.local/bin` directory.

```
cp check_rain $HOME/.local/bin

# Ensure that the directory is recognized by your shell (.e.g zsh)
echo 'export PATH="$HOME/.local/bin:$PATH"' >> ~/.zshrc
```

Now the script is runnable from anywhere.

## Docker Distribution

In case your colleagues can't install UV, we can distribute the script with Docker.

The recipe is in [dockerfile](./dockerfile), simply package the script:

```bash
docker build -t check_rain .
```

Now the image is ready to be distributed.

And run it anywhere:

```bash
docker run -it check_rain
```


## Key Benefits:

- With UV, we can develop, run, and distribute our Python script with ease.
- Coupled with Docker, we can leverage UV to distribute our Python script with Docker.

This approach combines the speed of UV with the portability of Docker, creating a robust development and distribution workflow.
